{"version":3,"sources":["components/contacts/ContactsForm/ContactsForm.styled.js","components/contacts/ContactsForm/ContactsForm.jsx","components/contacts/ContactsList/ContactsList.styled.js","components/contacts/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactsForm","state","name","number","nameId","uuidv4","telId","handleInputChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","id","onChange","Component","List","ul","Name","span","Item","li","ContactsList","contacts","onDeleteContacts","map","onClick","Filter","Title","h2","Container","div","App","filter","addName","find","contact","toLowerCase","alert","newPerson","deleteContacts","contactId","prevState","changeFilter","e","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e5afa7e.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 95%;\n  max-width: 400px;\n  padding: 10px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  margin-bottom: 6px;\n  padding: 5px;\n  border: 1px solid #7d847d;\n  border-radius: 4px;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  height: 38px;\n  margin-top: 5px;\n  border-width: inherit;\n  border-radius: 5px;\n  outline: none;\n  color: white;\n  background-color: green;\n  cursor: pointer;\n`;\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\r\n\r\nexport default class ContactsForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  nameId = uuidv4();\r\n  telId = uuidv4();\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    event.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Label htmlFor={this.nameId}>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={this.nameId}\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Label>\r\n          <Label htmlFor={this.telId}>\r\n            Telephone\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.telId}\r\n              value={this.state.number}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Label>\r\n\r\n          <Button type=\"submit\">Add to contacts</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 30%;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 12px;\n\n  background-color: grey;\n  color: white;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Name = styled.span`\n  display: block;\n  padding: 0 15px;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 400px;\n  height: 45px;\n  padding: 10px;\n  margin-top: 6px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\r\nimport { Button, List, Name, Item } from './ContactsList.styled';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContacts }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <Item key={id}>\r\n        <Name>\r\n          {name} : {number}\r\n        </Name>\r\n        <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  max-width: 400px;\r\n  margin-top: 23px;\r\n  padding: 10px;\r\n  border-radius: 1px;\r\n  color:green;\r\n  \r\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n height: 40px;\r\n  margin-bottom: 6px;\r\n  padding: 5px;\r\n  border: 1px solid #7d847d;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;","import PropTypes from 'prop-types';\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <Input type=\"text\" value={value} onChange={onChange} />\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  display: block;\n  width: 400px;\n  margin: 20px;\n  font-family: 'Roboto', sans-serif;\n  color: green;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const Container = styled.div`\n  margin: 10px;\n`;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport CotactsForm from '../contacts/ContactsForm/ContactsForm';\nimport ContactsList from '../contacts/ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\nimport { Title, Container } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addName = (name, number) => {\n    const condition = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (condition) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    const newPerson = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newPerson, ...contacts],\n    }));\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <CotactsForm onSubmit={this.addName} />\n        <Title>Contacts</Title>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContacts={this.deleteContacts}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}