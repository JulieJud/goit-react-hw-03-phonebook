{"version":3,"sources":["Component/Contacts/ContactsForm.styled.jsx","Component/Contacts/ContactsForm.jsx","Component/Contacts/ContactList.styled.jsx","Component/Contacts/ContactsList.jsx","Component/Filter/Filter.styled.jsx","Component/Filter/Filter.jsx","Component/Contacts/Title.styled.jsx","Component/App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactsForm","state","name","number","nameId","uuidv4","telId","handleInputChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","required","id","onChange","Component","List","ul","Name","span","Item","li","ContactsList","contacts","onDeleteContacts","map","onClick","Filter","Title","h2","Container","div","App","filter","addName","find","contact","toLowerCase","alert","newPerson","deleteContacts","contactId","prevState","changeFilter","e","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.463d9c1f.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  max-width: 400px;\r\n  padding: 10px;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  margin-bottom: 6px;\r\n  padding: 5px;\r\n  border: 1px solid #7d847d;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n height: 38px;\r\n  margin-top: 5px;\r\n  border-width: inherit;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  color: white;\r\n  background-color: green;\r\n  cursor: pointer;\r\n`;","\r\nimport { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\r\n\r\nexport default class ContactsForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number:''\r\n    }\r\n\r\n      nameId = uuidv4();\r\n      telId = uuidv4();\r\n\r\n    handleInputChange = event => {\r\n      this.setState({[event.currentTarget.name]:event.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    event.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Label >\r\n                        Name\r\n                        \r\n                        <Input\r\n                             type=\"text\"\r\n                             name=\"name\"\r\n                             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                             required\r\n                             id={this.nameId}\r\n                             value={this.state.name}\r\n                             onChange={this.handleInputChange}\r\n       \r\n                    />\r\n                \r\n              </Label>\r\n                      <Label >Telephone\r\n                         <Input\r\n                              type=\"tel\"\r\n                              name=\"number\"\r\n                              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                              required\r\n                              id={this.telId}\r\n                              value={this.state.number}\r\n                              onChange={this.handleInputChange}\r\n                      />\r\n              </Label>\r\n              \r\n                      <Button type=\"submit\">Add to contacts</Button>\r\n                    \r\n        </Form>\r\n      \r\n      </div>\r\n    );\r\n    }\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 30%;\r\n  border-width: 0;\r\n  line-height: 40px;\r\n  border-radius: 20px;\r\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  \r\n  background-color: grey;\r\n  color:white;\r\n`;\r\n\r\nexport const List = styled.ul`\r\npadding:0;\r\n`;\r\n\r\nexport const Name = styled.span`\r\n  display: block;\r\n  padding: 0 15px;\r\n  font-family: 'Roboto', sans-serif;\r\n  color: black;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 400px;\r\n  height: 45px;\r\n  padding: 10px;\r\n  margin-top: 6px;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\r\n  list-style: none;\r\n`;","\r\nimport PropTypes from 'prop-types';\r\nimport { Button, List, Name, Item } from './ContactList.styled';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContacts }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <Item key={id}>\r\n        <Name>\r\n          {name} : {number}\r\n            </Name>\r\n            <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\r\n      \r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\n\r\n\r\nexport default ContactsList\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func,\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  max-width: 400px;\r\n  margin-top: 23px;\r\n  padding: 10px;\r\n  border-radius: 1px;\r\n  color:green;\r\n  \r\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n height: 40px;\r\n  margin-bottom: 6px;\r\n  padding: 5px;\r\n  border: 1px solid #7d847d;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;","\r\nimport PropTypes from 'prop-types';\r\nimport { Label, Input } from '../Filter/Filter.styled';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    \r\n      <Label>\r\n        Find contacts by name\r\n        <Input type=\"text\" value={value} onChange={onChange}></Input>\r\n      </Label>\r\n    \r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  display: block;\r\n  width: 400px;\r\n  margin: 20px;\r\n  font-family: 'Roboto', sans-serif;\r\n  color: green;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\nmargin:10px;\r\n`;","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport CotactsForm from './Contacts/ContactsForm';\nimport ContactsList from './Contacts/ContactsList';\nimport Filter from './Filter/Filter';\nimport { Title, Container } from './Contacts/Title.styled';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addName = (name, number) => {\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    const newPerson = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [newPerson, ...contacts],\n    }));\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <CotactsForm onSubmit={this.addName} />\n        <Title>Contacts</Title>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContacts={this.deleteContacts}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Component/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}